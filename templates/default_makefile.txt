# Main settings
MCU = *GCC_MCU*
TARGET = *TARGET*
OPTIMIZE = *OPTIMIZE*

# AVRDUDE programmer settings
AVRDUDE = *AVRDUDE_PATH*
PROGRAMMER = *PROGRAMMER*
AVRDUDE_MCU = *AVRDUDE_MCU*
PROGRAMMER_ARGS = 

# AVR_GCC settings
AVRGCC = *AVRGCC_PATH*
AVROBJCPY = *AVROBJCPY_PATH*

# Add all C files
SOURCES = *C_FILES*

# Used libraries search paths
#LDFLAGS += -L../efslsource/
# Used libraries names
#LDFLAGS += -lefsl 

OBJECTS = $(SOURCES:.c=.o)
CFLAGS = -c $(OPTIMIZE)
LDFLAGS =

all: hex eeprom

hex: $(TARGET).hex

eeprom: $(TARGET)_eeprom.hex

$(TARGET).hex: $(TARGET).elf
	$(AVROBJCPY) -O ihex -j .data -j .text $(TARGET).elf $(TARGET).hex

$(TARGET)_eeprom.hex: $(TARGET).elf
	$(AVROBJCPY) -O ihex -j .eeprom --change-section-lma .eeprom=1 $(TARGET).elf $(TARGET)_eeprom.hex

$(TARGET).elf: $(OBJECTS)
	$(AVRGCC) $(LDFLAGS) -mmcu=$(MCU) $(OBJECTS) -o $(TARGET).elf

.c.o:
	$(AVRGCC) $(CFLAGS) -mmcu=$(MCU) $< -o $@

size:
	avr-size --mcu=$(MCU) -C $(TARGET).elf

flash:
	$(AVRDUDE) -p $(AVRDUDE_MCU) -c $(PROGRAMMER) -U flash:w:$(TARGET).hex:a
## An alias
program: flash

clean:
	rm -rf *.o
	rm -rf *.elf
	rm -rf *.hex
